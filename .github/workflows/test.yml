on:
  workflow_call:
    inputs:
      runner_image:
        description: The GitHub Actions runner image to be tested
        required: true
        type: string

      github_ref:
        description: The `github.ref` value from the workflow run context
        required: true
        type: string

      commit_hash:
        description: The hash of the commit that was added before running this workflow
        required: true
        type: string

    outputs:
      json_test_results:
        description: Test results as JSON
        value: ${{ jobs.json_test_results.outputs.json }}

jobs:
  git_version:
    runs-on: ${{ inputs.runner_image }}
    outputs:
      version: ${{ steps.git_version.outputs.version }}
    steps:
      - id: git_version
        run: echo "version=$(git --version)" >> $GITHUB_OUTPUT
        shell: bash

  default_checkout:
    runs-on: ${{ inputs.runner_image }}
    outputs:
      commit_hash: ${{ steps.head_commit_hash.outputs.commit_hash }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - id: head_commit_hash
        run: echo "commit_hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        shell: bash

  default_checkout_and_pull:
    runs-on: ${{ inputs.runner_image }}
    outputs:
      commit_hash: ${{ steps.head_commit_hash.outputs.commit_hash }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - run: git pull
        shell: bash

      - id: head_commit_hash
        run: echo "commit_hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        shell: bash

  checkout_github_ref:
    runs-on: ${{ inputs.runner_image }}
    outputs:
      commit_hash: ${{ steps.head_commit_hash.outputs.commit_hash }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.github_ref }}

      - id: head_commit_hash
        run: echo "commit_hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        shell: bash

  checkout_commit_hash:
    runs-on: ${{ inputs.runner_image }}
    outputs:
      commit_hash: ${{ steps.head_commit_hash.outputs.commit_hash }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.commit_hash }}

      - id: head_commit_hash
        run: echo "commit_hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        shell: bash

  jsonify_test_results:
    name: Jsonify Test Results
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.jsonify.outputs.json }}
    needs:
      - git_version
      - default_checkout
      - default_checkout_and_pull
      - checkout_github_ref
      - checkout_commit_hash
    steps:
      - id: jsonify
        shell: bash
        run: |
          echo "json=$(jq \
            --null-input \
            --raw-output
            --arg image "${{ inputs.runner_image }}" \
            --arg gitVersion "${{ needs.git_version.outputs.version }}" \
            --arg hashDefaultCheckout "${{ needs.default_checkout.outputs.commit_hash }}" \
            --arg hashDefaultCheckoutAndPull "${{ needs.default_checkout_and_pull.outputs.commit_hash }}" \
            --arg hashCheckoutGithubRef "${{ needs.checkout_github_ref.outputs.commit_hash }}" \
            --arg hashCheckoutCommitHash "${{ needs.checkout_commit_hash.outputs.commit_hash }}" \
            '{
              "image": $image,
              "gitVersion": $gitVersion,
              "actualCommitHashes": {
                "defaultCheckout": $hashDefaultCheckout,
                "defaultCheckoutAndPull": $hashDefaultCheckoutAndPull,
                "checkoutGithubRef": $hashCheckoutGithubRef,
                "checkoutCommitHash": $hashCheckoutCommitHash
              }
            }')" >> $GITHUB_OUTPUT

